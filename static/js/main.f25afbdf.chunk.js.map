{"version":3,"sources":["Movies.js","apiCalls.js","Details.js","Search.js","App.js","index.js"],"names":["filteredCards","Movies","movies","filteredMovies","movieCards","map","movie","to","id","className","src","alt","length","fetchMovies","a","fetch","response","ok","Error","json","allMovies","fetchSingleMovie","url","movieDetails","dayjs","require","Details","props","state","details","error","isLoadingDetails","this","stateChange","setState","selectedID","then","data","catch","message","title","tagline","average_rating","toFixed","overview","budget","revenue","runtime","release_date","format","poster_path","backdrop_path","Component","Search","movieFilterOnChange","event","inputValue","target","value","filterSearch","movieResults","moviesSearch","filter","toLowerCase","includes","searchValue","action","method","htmlFor","type","placeholder","onChange","onKeyUp","App","componentDidMount","isLoading","key","newValue","exact","path","render","match","params","showAllMovies","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f25afbdf.chunk.js","sourcesContent":["import React from 'react';\nimport './Movies.css';\n\nimport { Link } from \"react-router-dom\";\nlet filteredCards = []\nconst Movies = ( { movies, filteredMovies } ) => {\n  const movieCards = movies.map(movie => {\n    return (\n      <Link key={movie['id']} to={ `/${movie['id']}` } id={ movie['id'] } className='movie-card'>\n         <img className='movie-poster' src={ movie[\"poster_path\"] } alt={ `${movie[\"title\"]} poster` }/>\n      </Link>\n    )\n  })\n  if (filteredMovies ) {\n    filteredCards = filteredMovies.map(movie => {\n      return(\n        <Link key={movie['id']} to={ `/${movie['id']}` } id={ movie['id'] } className='movie-card'>\n           <img className='movie-poster' src={ movie[\"poster_path\"] } alt={ `${movie[\"title\"]} poster` }/>\n        </Link>\n      )\n    })\n  }\n\n  return (\n    <div className='movies-display'>\n      { filteredCards.length > 0 && <div className='movie-container'>{ filteredCards }</div>}\n      { movieCards.length > 0 && !filteredCards.length && <div className='movie-container'>{ movieCards }</div> }\n    </div>\n  )\n}\n\nexport default Movies;\n","export const fetchMovies = async () => {\n  let url = 'https://rancid-tomatillos.herokuapp.com/api/v2/movies';\n  let response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('Movies failed to load. Please try again later!')\n  }\n  let allMovies = await response.json();\n  return allMovies;\n}\n\nexport const fetchSingleMovie = async (id) => {\n  let url = `https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`;\n  let response = await fetch(url);\n  if (!response.ok) {\n    throw new Error('We don\\'t have that movie yet, sorry!')\n  }\n  let movieDetails = await response.json();\n  return movieDetails;\n}\n","import React, { Component } from 'react';\nimport './Details.css';\nimport './images/back-arrow-1.svg';\nimport { Link } from \"react-router-dom\";\nimport { fetchSingleMovie } from './apiCalls';\nconst dayjs = require('dayjs');\n\nclass Details extends Component {\n  constructor(props) {\n    super();\n      this.state = {\n        details: {},\n        error: '',\n        isLoadingDetails: false\n      }\n  }\n\n  componentDidMount() {\n    this.props.stateChange('filteredMovies', [])\n    this.setState({ isLoadingDetails: true })\n    fetchSingleMovie(this.props.selectedID)\n       .then(data => this.setState({ details: data.movie, isLoadingDetails: false }))\n       .catch(error => this.setState({ error: error.message, isLoadingDetails: false }))\n  }\n\n  render() {\n    const movie = this.state.details;\n    return (\n      <div className=\"detail-page\">\n        { this.state.isLoadingDetails && <h2>Loading Movie Details...</h2> }\n        { this.state.error &&\n          <div className='error-page'>\n            <h2 className='error-message'>{ this.state.error }</h2>\n            <Link to=\"/\">\n              <img src={ '/back-arrow-1.svg' } className='arrow-icon' alt='Back arrow' />\n            </Link>\n          </div> }\n       { movie.title && !this.state.error &&\n         <div className='movie-details'>\n          <div className='movie-info'>\n            <div className='title-container'>\n              <h1 className='movie-title'>{ movie.title }</h1>\n            </div>\n            { movie.tagline && <p className='tagline'><em>{ `\"${ movie.tagline }\"` }</em></p> }\n            <p className='detail-rating'>{`⭐️  ${ movie.average_rating.toFixed(1)} `}</p>\n            <p className='movie-overview'>{ movie.overview }</p>\n            { movie.budget > 0 && <p className='budget'>Budget: $ { movie.budget }</p> }\n            { movie.revenue > 0 && <p className='revenue'>Revenue: $ { movie.revenue }</p> }\n            { movie.runtime > 0 && <p className='runtime'>Runtime: { movie.runtime } mins</p> }\n            <p className='movie-releaseDate'>Released on { dayjs(movie.release_date).format('MMMM DD, YYYY') }</p>\n            <Link to=\"/\">\n              <img src={ '/back-arrow-1.svg' } className='arrow-icon' alt='Back arrow' />\n            </Link>\n            </div>\n          <img className='movie-cover' src={ movie.poster_path } alt={ `${ movie.title } Poster` }/>\n          <img className='movie-backdrop' src={ movie.backdrop_path } alt={ `${ movie.title } Backdrop` }/>\n          </div>\n        }\n    </div>\n    )\n  }\n }\n\nexport default Details;\n","import React, { Component } from 'react';\nimport './Search.css';\nimport { Link } from \"react-router-dom\";\n\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: '',\n      inputValue: ''\n    }\n  }\n\n  movieFilterOnChange = (event) => {\n    this.setState({\n      inputValue: event.target.value\n    })\n  }\n\n  filterSearch = (event) => {\n    const movieResults = this.props.moviesSearch.filter(movie => {\n      return movie.title.toLowerCase().includes(this.state.inputValue.toLowerCase())\n    })\n    if (!movieResults.length) {\n      this.props.stateChange(\"error\", 'Sorry, we don\\'t have that movie')\n      this.props.stateChange('filteredMovies', [])\n    } else {\n      this.props.stateChange(\"error\", '')\n      this.props.stateChange('filteredMovies', movieResults)\n    }\n  }\n\n  render(){\n    return (\n      <form action=\"/\" method=\"get\" className='search-form'>\n        <label htmlFor='header-search'>\n          <span className='visually-hidden'>Search Movies</span>\n        </label>\n        <input\n          className='search-input'\n          type='text'\n          id='header-search'\n          value={ this.inputValue }\n          placeholder='Search Movies'\n          onChange={ this.movieFilterOnChange }\n          onKeyUp={ event => this.filterSearch(event) }\n        />\n      </form>\n    )\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Movies from './Movies.js';\nimport { Route } from \"react-router-dom\";\nimport Details from './Details';\nimport Search from './Search';\nimport { fetchMovies } from './apiCalls';\n\nclass App extends Component {\n  constructor() {\n    super();\n      this.state = {\n        movies: [],\n        error: '',\n        isLoading: false,\n        filteredMovies: [],\n      }\n  }\n\n  componentDidMount = () => {\n    this.setState({ isLoading: true })\n    fetchMovies()\n      .then(data => this.setState({ movies: data.movies, isLoading: false }))\n      .catch(error => this.setState({ error: error.message, isLoading: false }))\n  }\n\n  stateChange = (key, newValue) => {\n    this.setState({ [key]: newValue })\n  }\n\n  render() {\n    const { movies, error, isLoading } = this.state;\n    return (\n      <main className='App'>\n        <nav className='nav-bar'>\n          <img src = { 'charles-deluvio-I6mx55jXOvM-unsplash.jpg' } className=\"popcorn\" alt=\"Spilt popcorn\"/>\n          <div className='nav-text'>\n            <h2 className='header'>Rancid Tomatillos</h2>\n          </div>\n        </nav>\n        { this.state.isLoading && <h3 className='error'>Loading Movies...</h3> }\n        { this.state.error && <h3 className='error'>{ this.state.error }</h3> }\n        <Route exact path=\"/\">\n          <Search id='search'\n            moviesSearch={ movies }\n            inputValue={ this.state.inputValue }\n            stateChange = { this.stateChange }\n          />\n          <Movies id='movie'\n            movies={ movies }\n            filteredMovies={ this.state.filteredMovies }\n          />\n        </Route>\n        <Route exact path='/:id' render={ ({ match }) => {\n          const selectedID = match.params.id;\n          return <Details\n            selectedID={ selectedID }\n            showAllMovies={ this.showAllMovies }\n            stateChange = { this.stateChange }\n            />\n          }}\n        />\n      </main>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter> <App /> </BrowserRouter>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}